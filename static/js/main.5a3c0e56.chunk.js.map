{"version":3,"sources":["Image.js","Downarrow.js","Uparrow.js","Connections.js","Card.js","CardList.js","reportWebVitals.js","index.js","avengersProfile.js"],"names":["Image","display","src","width","height","alt","Downarrow","clickChange","onClick","className","Uparrow","Connections","data","imagePath","imageName","elements","item","split","length","console","log","push","processData","Card","props","handleDownarrowClick","setState","displayConnectionsInfo","state","handleUparrowClick","this","connectionsList","connections","heroName","name","Component","CardList","CardsArray","avengers","map","avenger","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","0","1","2","document","getElementById"],"mappings":"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","file":"static/js/main.5a3c0e56.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Image = ({display})=>{\r\n\t\r\n\tswitch(display){\r\n\r\n\t\tcase 'Iron Man':\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src='Iron_Man.jpg' width='200' height='400' alt='Iron Man'/>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\tcase 'Captain America':\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src='Captain_America.jpg' width='200' height='400' alt='Captain America'/>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\r\n\t\tcase 'Hulk':\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src='Hulk.jpg' width='200' height='400' alt='Hulk'/>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\r\n\t\tcase 'Thor':\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src='Thor.jpg' width='200' height='400' alt='Thor'/>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\r\n\t\tcase 'Black Widow':\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src='Black_Widow.jpg' width='200' height='400' alt='Black Widow'/>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\r\n\t\tcase 'Hawkeye':\r\n\t\t\treturn(\r\n\t\t\t\t<div><img src='Hawkeye.png' width='200' height='400' alt='Hawkeye'/>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\r\n\t    default:\r\n\t\t\treturn(<div><img src='' width='200' height='400' alt='Err'/>\r\n\t\t\t\t</div>);\r\n\r\n\t}\r\n}\r\n\r\nexport default Image;","import React from 'react'\r\n\r\nconst Downarrow = ({ clickChange })=>{\r\n\treturn(<button  onClick={clickChange} className='styled'>&#8964;</button>)\r\n}\r\n\r\nexport  default Downarrow;","import React from 'react'\r\n//{ clickChange }onClick={clickChange}\r\nconst Uparrow = ({ clickChange })=>{\r\n\treturn(<button   onClick={clickChange} className='styled'>˄</button>)\r\n}\r\n\r\nexport  default Uparrow;","import React from 'react';\r\n\r\nconst Connections = ({ data })=>{\r\n\r\n\r\n\r\nconst processData=()=>{\r\n\tlet imageName=null;\r\n\tlet elements= [];\r\n\tlet imagePath;\r\n\t//let ext = null;\r\n\r\n\tfor(let  item in data){\r\n\t\timageName=data[item].split(\" \");\r\n\t\tif(imageName.length>1){\r\n\t\t\timageName=`${imageName[0]}_${imageName[1]}`\t\r\n\t\t}else{\r\n\t\t\timageName=`${imageName[0]}`\r\n\t\t}\r\n\t\t\r\n\r\n\t\timagePath=`${imageName}.png`\r\n\t\tconsole.log(imagePath)\r\n\t\t\r\n\t\t//?  :\r\n\t\t//imagePath=isValidPath(imageName,'png');\r\n\r\n\t\telements.push(<img className='grow' src={imagePath} width='200' height='400' alt={`${imageName}`}/>)\r\n\t\telements.push(<h3 key={item} className='gray'>{data[item]}</h3>);\r\n\r\n\t}\r\n\t\r\n return elements;\r\n}\r\nreturn (<div>{processData()}</div>);\r\n}\r\nexport default Connections;\r\n\r\n","import React,{ Component } from 'react'\r\n//import { createPopper } from '@popperjs/core';\r\nimport Image from './Image'\r\nimport Downarrow from './Downarrow'\r\nimport Uparrow from './Uparrow'\r\nimport Connections from './Connections'\r\n//import Across from './Across'\r\nclass Card extends Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tdisplayConnectionsInfo:false\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n    handleDownarrowClick=()=>{\r\n\t\t  this.setState({displayConnectionsInfo:true},() => { console.log('new state', this.state); })\r\n\t}\r\n\r\n\thandleUparrowClick=()=>{\r\n\t\t  this.setState({displayConnectionsInfo:false},() => { console.log('new state', this.state); })\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\tconst displayConnectionsInfo=this.state.displayConnectionsInfo;\r\n\t\tconst connectionsList = this.props.connections;\r\n\t\t\r\n\t\t\t\t\t   \r\n\t\t\t\treturn (<div className='tc bg-white dit br3 pa1 ma3  bw2 shadow-5 fn v-top'>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=' grow'>\r\n\t\t\t\t\t\t\t\t<Image  className='fl' display={this.props.heroName}/>\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='grow'>\r\n\t\t\t\t\t\t\t\t<h2>{this.props.heroName}</h2>\r\n\t\t\t\t\t\t\t\t<h3>{this.props.name}</h3>\t\r\n\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tdisplayConnectionsInfo?\r\n\t\t\t\t\t\t\t\t\t\t(<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h1>Connections</h1>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Connections data={connectionsList}/>\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Uparrow clickChange={this.handleUparrowClick} />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t\t\t\t :\r\n\t\t\t\t\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconnectionsList?(\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Downarrow className='grow' clickChange={this.handleDownarrowClick}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t):(null)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\r\n\t}\r\n\r\n\r\n\r\n}\r\n//<h2>{console.log(connectionsList)}\r\n\r\nexport default Card;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({\tavengers })=>{\r\n\r\n\tlet CardsArray=avengers.map((avenger,i)=>{\r\n\t\treturn <Card heroName={avenger.heroName} name={avenger.name} connections={avenger.connections} key={i}/>\r\n\t})\r\n\r\n\treturn <div>{CardsArray}</div>\r\n}\r\n\r\nexport default CardList;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons'\r\nimport 'tachyons-floats'\r\nimport CardList from './CardList';\r\nimport { avengersProfile } from './avengersProfile'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <div className='tc'>\r\n  \t<h1  >Welcome to Avengers portal</h1>\r\n  \t<CardList avengers={avengersProfile}  />\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const avengersProfile =[\r\n\t{\r\n\t\tname:\"Tony Stark\",\r\n\t\theroName:\"Iron Man\",\r\n\t\tconnections:{0:\"Pepper Potts\",1:\"Howard Stark\",2:\"Maria Stark\"}\r\n\t},\r\n\t{\r\n\t\tname:\"Steve Rogers\",\r\n\t\theroName:\"Captain America\",\r\n\t\tconnections:{0:\"James Barnes\",1:\"Margaret Carter\"}\r\n\t},\r\n\t{\r\n\t\tname:\"Thor Odinson\",\r\n\t\theroName:\"Thor\",\r\n\t\tconnections:{0:\"Jane Foster\",1:\"Loki\"}\r\n\t},\r\n\t{\r\n\t\tname:\"Bruce Banner\",\r\n\t\theroName:\"Hulk\",\r\n\t\tconnections:{0:\"Betty Ross\",1:\"Thaddeus Ross\"}\r\n\t},\r\n\t{\r\n\t\tname:\"Natasha Romanoff\",\r\n\t\theroName:\"Black Widow\",\r\n\t\tconnections:{0:\"Nick Fury\"}\r\n\t},\r\n\t{\r\n\t\tname:\"Clint Barton\",\r\n\t\theroName:\"Hawkeye\",\r\n\t\tconnections:{0:\"Laura Barton\"}\r\n\t}\r\n];\r\n\r\n"],"sourceRoot":""}